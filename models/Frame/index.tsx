/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Velivian Fesothe (https://sketchfab.com/fesothe)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/picture-frame-by-velivian-fesothe-9150adf097a24d929840eae6b2903dc4
title: Picture Frame - By Velivian Fesothe
*/

// import * as THREE from 'three'
import { forwardRef, } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { angleToRadians } from '../../utils/formatter'
import { MODEL_PATH } from '../../utils/constants'

import { DoubleSide } from 'three/src/Three'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
  }
  materials: {
    def_surf_mat: THREE.MeshPhysicalMaterial
  }
}

const Frame = forwardRef(
  (props: JSX.IntrinsicElements['group'], zoomRef: any) => {
    const { nodes, materials } = useGLTF(MODEL_PATH.PRIMARY) as any
    const texture = useTexture('dance.jpg')



    return (
      <group { ...props } dispose={ null } ref={ zoomRef }>
        <group rotation={ [0, 0, Math.PI / 2] }>
          <mesh
            scale={ [0.915, 0.88, 1] }
            castShadow
            receiveShadow
            geometry={ nodes.Object_2.geometry }
            material={ materials.def_surf_mat }
          />
          <mesh
            position={ [0.255, -0.01, 6.2] }
            scale={ 3.5 }
            rotation={ [
              angleToRadians(180),
              angleToRadians(180),
              angleToRadians(90),
            ] }
          >
            <planeGeometry args={ [1, 1.241] } />
            <meshStandardMaterial
              map={ texture as THREE.Texture }
              toneMapped={ false }
              side={ DoubleSide }
            />
          </mesh>
        </group>
      </group>
    )
  }
)

export default Frame
